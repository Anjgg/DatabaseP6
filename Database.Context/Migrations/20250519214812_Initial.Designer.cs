// <auto-generated />
using System;
using Database.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Database.Context.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250519214812_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Database.Context.Model.ApplicationVersion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NumVersion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Versions");
                });

            modelBuilder.Entity("Database.Context.Model.Produit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Produits");
                });

            modelBuilder.Entity("Database.Context.Model.Produit_SystemeExploitation_Version", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProduitId")
                        .HasColumnType("int");

                    b.Property<int>("SystemeExploitationId")
                        .HasColumnType("int");

                    b.Property<int>("VersionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProduitId");

                    b.HasIndex("SystemeExploitationId");

                    b.HasIndex("VersionId");

                    b.ToTable("Produit_SystemeExploitation_Versions");
                });

            modelBuilder.Entity("Database.Context.Model.SystemeExploitation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SystemesExploitation");
                });

            modelBuilder.Entity("Database.Context.Model.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset?>("ClosingDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("CreationDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProduitSystemeExploitationVersionId")
                        .HasColumnType("int");

                    b.Property<string>("Resolution")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Statut")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProduitSystemeExploitationVersionId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("Database.Context.Model.Produit_SystemeExploitation_Version", b =>
                {
                    b.HasOne("Database.Context.Model.Produit", "Produit")
                        .WithMany("Produit_SystemeExploitation_Versions")
                        .HasForeignKey("ProduitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Database.Context.Model.SystemeExploitation", "SystemeExploitation")
                        .WithMany("Produit_SystemeExploitation_Versions")
                        .HasForeignKey("SystemeExploitationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Database.Context.Model.ApplicationVersion", "Version")
                        .WithMany("Produit_SystemeExploitation_Versions")
                        .HasForeignKey("VersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produit");

                    b.Navigation("SystemeExploitation");

                    b.Navigation("Version");
                });

            modelBuilder.Entity("Database.Context.Model.Ticket", b =>
                {
                    b.HasOne("Database.Context.Model.Produit_SystemeExploitation_Version", "ProduitSystemeExploitationVersion")
                        .WithMany("Tickets")
                        .HasForeignKey("ProduitSystemeExploitationVersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProduitSystemeExploitationVersion");
                });

            modelBuilder.Entity("Database.Context.Model.ApplicationVersion", b =>
                {
                    b.Navigation("Produit_SystemeExploitation_Versions");
                });

            modelBuilder.Entity("Database.Context.Model.Produit", b =>
                {
                    b.Navigation("Produit_SystemeExploitation_Versions");
                });

            modelBuilder.Entity("Database.Context.Model.Produit_SystemeExploitation_Version", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("Database.Context.Model.SystemeExploitation", b =>
                {
                    b.Navigation("Produit_SystemeExploitation_Versions");
                });
#pragma warning restore 612, 618
        }
    }
}
